plugins {
    id 'java'
    id "io.qameta.allure" version "2.8.1"
}

group 'RestAPI_Demo'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation group: 'org.testng', name: 'testng', version: '6.8.8'
    implementation group: 'io.rest-assured', name: 'rest-assured', version: '3.0.6'
    testCompile(group: 'io.rest-assured', name: 'rest-assured', version: '4.3.0') {
        exclude(module: 'groovy')
    }
    implementation group: 'io.rest-assured', name: 'json-schema-validator', version: '3.0.6'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    compile group: 'org.json', name: 'json', version: '20180813'
    implementation "org.projectlombok:lombok:1.18.2"
    implementation "org.projectlombok:lombok:1.18.2"
    annotationProcessor "org.projectlombok:lombok:1.18.2"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.2"
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'com.google.inject', name: 'guice', version: '4.2.3'
    implementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.13.2'
    implementation('io.qameta.allure:allure-rest-assured:2.10.0')
}

allure {
    version = '2.8.1'
    autoconfigure = true
    aspectjweaver = true
    allureJavaVersion = '2.10.0'
    reportDir = new File(project.projectDir as File, '/allure-report/ui')
    resultsDir = new File(project.projectDir as File, '/allure-report/results')
    clean = true
}

task runTests(type: Test) {
    outputs.upToDateWhen {false}
    useTestNG() {
        includeGroups System.getProperty('tag', 'smoke')
        useDefaultListeners = false
    }
    testLogging.showStandardStreams = true
}


task createReportDir() {
    doLast {
        def file = new File(project.projectDir as File, '/allure-report/ui')
        if (!file.exists()) {
            file.mkdirs();
        }
    }
}

task saveHistory(type: Copy) {
    from new File(project.projectDir as File, '/allure-report/ui/history')
    into new File(project.projectDir as File, '/allure-report/results/history')
}

tasks.runTests.dependsOn 'clean', 'build', 'createReportDir'
tasks.build.mustRunAfter 'clean'
tasks.runTests.finalizedBy('allureReport', 'saveHistory')
tasks.saveHistory.mustRunAfter('allureReport')